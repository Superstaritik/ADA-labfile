#include <iostream>
#include <vector>

int binary_search_recursive(const std::vector<int>& arr, int target, int low, int high) {
    if (low > high) {
        return -1;
    }

    int mid = low + (high - low) / 2;

    if (arr[mid] == target) {
        return mid;
    } else if (arr[mid] < target) {
        return binary_search_recursive(arr, target, mid + 1, high);
    } else {
        return binary_search_recursive(arr, target, low, mid - 1);
    }
}

int binary_search(const std::vector<int>& arr, int target) {
    return binary_search_recursive(arr, target, 0, arr.size() - 1);
}

int main() {
    std::vector<int> arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int target = 7;
    int result = binary_search(arr, target);
    if (result != -1) {
        std::cout << "Element is present at index " << result << std::endl;
    } else {
        std::cout << "Element is not present in array" << std::endl;
    }
    return 0;
}
